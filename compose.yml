services:
  postgres:
    image: postgres
    container_name: time_manager_db
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_DB=$(POSTGRES_DB)
    volumes:
      - ./db-data:/var/lib/postgresql/data
    ports: 
      - 5432:5432
    networks:
      - back-end
  
  adminer:
    image: adminer
    container_name: time_manager_adminer
    restart: always
    ports:
      - 8080:8080
    networks:
      - back-end

  vue:
    image: frontend
    container_name: time_manager_frontend
    build:
      context: ./frontend
      dockerfile: dockerfile
    restart: always
    ports:
      - 5173:8080
    depends_on:
      - postgres
    volumes:
      - ./frontend:/app
    networks:
      - front-end
      - back-end

  phoenix:
    build:
      context: ./backend
      args:
        - OS=${OS}
        - ENV=${ENV}
        - POSTGRES_USER=${POSTGRES_USER}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        - POSTGRES_HOST=${POSTGRES_HOST}
        - POSTGRES_DB=$(POSTGRES_DB)
    container_name: time_manager_phoenix
    restart: always
    ports:
      - 4000:4000
    depends_on:
      - postgres
    volumes:
      - ./backend:/app
    networks:
      - back-end
    command: /bin/sh -c "echo ENV=$ENV && echo OS=$OS && mix phx.server"

networks:
  front-end:
  back-end:
